
Tail-Chasing Analysis Complete
========================================
Total Issues: 9
Global Risk Score: 3.65 (OK)
Affected Modules: 3

Top Issues:
  [circular_import] /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py:3 - Circular import detected: analyzer → processor → handler → analyzer
  [duplicate_function] /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py:28 - Structurally identical functions: _is_valid (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py), process_data (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py), validate_input (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py), process (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py)
  [duplicate_function] /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py:36 - Duplicate functions in /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py: calculate_metrics, compute_average
  [phantom_function] /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py:28 - Pass-only function: QualityAnalyzer._is_valid
  [phantom_function] /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py:18 - Pass-only function: DataHandler.process_data
{
  "metadata": {
    "version": "1.0",
    "generated": "2025-07-19T17:30:45.847582",
    "tool": "tail-chasing-detector"
  },
  "summary": {
    "total_issues": 9,
    "global_score": 3.65,
    "risk_level": "OK",
    "affected_modules": 3
  },
  "distribution": {
    "circular_import": 1,
    "duplicate_function": 2,
    "phantom_function": 6
  },
  "module_scores": {
    "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py": 18.3,
    "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py": 12.8,
    "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py": 5.4
  },
  "issues": [
    {
      "kind": "circular_import",
      "message": "Circular import detected: analyzer \u2192 processor \u2192 handler \u2192 analyzer",
      "severity": 3,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py",
      "line": 3,
      "end_line": null,
      "column": null,
      "end_column": null,
      "symbol": null,
      "evidence": {
        "cycle": [
          "analyzer",
          "processor",
          "handler"
        ],
        "length": 3,
        "import_locations": [
          {
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py",
            "line": 3,
            "from_module": "analyzer",
            "to_module": "processor"
          },
          {
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py",
            "line": 3,
            "from_module": "processor",
            "to_module": "handler"
          },
          {
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
            "line": 8,
            "from_module": "handler",
            "to_module": "analyzer"
          }
        ]
      },
      "suggestions": [
        "Consider refactoring shared code into a separate module",
        "Use import statements inside functions instead of at module level",
        "Review if all imports are necessary"
      ],
      "confidence": 1.0
    },
    {
      "kind": "duplicate_function",
      "message": "Structurally identical functions: _is_valid (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py), process_data (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py), validate_input (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py), process (/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py)",
      "severity": 3,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py",
      "line": 28,
      "end_line": null,
      "column": null,
      "end_column": null,
      "symbol": null,
      "evidence": {
        "hash": "8942f3facce67b9a",
        "count": 4,
        "functions": [
          {
            "name": "_is_valid",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py",
            "line": 28,
            "size": 2
          },
          {
            "name": "process_data",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
            "line": 18,
            "size": 2
          },
          {
            "name": "validate_input",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
            "line": 30,
            "size": 2
          },
          {
            "name": "process",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py",
            "line": 13,
            "size": 2
          }
        ]
      },
      "suggestions": [
        "Extract common functionality into a shared function",
        "Consider creating a base class if functions are in related classes",
        "Remove redundant implementations"
      ],
      "confidence": 0.95
    },
    {
      "kind": "duplicate_function",
      "message": "Duplicate functions in /Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py: calculate_metrics, compute_average",
      "severity": 2,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
      "line": 36,
      "end_line": null,
      "column": null,
      "end_column": null,
      "symbol": null,
      "evidence": {
        "hash": "fe035f4c065984a3",
        "count": 2,
        "functions": [
          {
            "name": "calculate_metrics",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
            "line": 36,
            "size": 5
          },
          {
            "name": "compute_average",
            "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
            "line": 45,
            "size": 5
          }
        ]
      },
      "suggestions": [
        "Extract common functionality into a shared function",
        "Consider creating a base class if functions are in related classes",
        "Remove redundant implementations"
      ],
      "confidence": 0.95
    },
    {
      "kind": "phantom_function",
      "message": "Pass-only function: QualityAnalyzer._is_valid",
      "severity": 2,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/analyzer.py",
      "line": 28,
      "end_line": 31,
      "column": null,
      "end_column": null,
      "symbol": "QualityAnalyzer._is_valid",
      "evidence": {
        "function_name": "_is_valid",
        "placeholder_type": "pass-only_function"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    },
    {
      "kind": "phantom_function",
      "message": "Pass-only function: DataHandler.process_data",
      "severity": 2,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
      "line": 18,
      "end_line": 20,
      "column": null,
      "end_column": null,
      "symbol": "DataHandler.process_data",
      "evidence": {
        "function_name": "process_data",
        "placeholder_type": "pass-only_function"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    },
    {
      "kind": "phantom_function",
      "message": "Trivial return stub: DataHandler.format_output",
      "severity": 1,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
      "line": 26,
      "end_line": 28,
      "column": null,
      "end_column": null,
      "symbol": "DataHandler.format_output",
      "evidence": {
        "function_name": "format_output",
        "placeholder_type": "trivial_return_stub"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    },
    {
      "kind": "phantom_function",
      "message": "Pass-only function: DataHandler.validate_input",
      "severity": 2,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/handler.py",
      "line": 30,
      "end_line": 32,
      "column": null,
      "end_column": null,
      "symbol": "DataHandler.validate_input",
      "evidence": {
        "function_name": "validate_input",
        "placeholder_type": "pass-only_function"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    },
    {
      "kind": "phantom_function",
      "message": "Pass-only function: DataProcessor.process",
      "severity": 2,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py",
      "line": 13,
      "end_line": 16,
      "column": null,
      "end_column": null,
      "symbol": "DataProcessor.process",
      "evidence": {
        "function_name": "process",
        "placeholder_type": "pass-only_function"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    },
    {
      "kind": "phantom_function",
      "message": "Trivial return stub: DataProcessor.clean_data",
      "severity": 1,
      "file": "/Users/rohanvinaik/github/TailChasingFixer/examples/demo_target/processor.py",
      "line": 23,
      "end_line": 25,
      "column": null,
      "end_column": null,
      "symbol": "DataProcessor.clean_data",
      "evidence": {
        "function_name": "clean_data",
        "placeholder_type": "trivial_return_stub"
      },
      "suggestions": [
        "Implement the function or remove if not needed",
        "If this is intentional, add to 'placeholders.allow' in config",
        "Consider using abstract base classes for interface definitions"
      ],
      "confidence": 0.9
    }
  ]
}
