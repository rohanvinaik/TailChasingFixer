#!/usr/bin/env python3
# Auto-generated by TailChasingFixer
import pathlib, sys
from dataclasses import dataclass

@dataclass
class Suggestion:
    file: str
    line: int = 0
    original: str = ''
    replacement: str = ''
    title: str = ''

SUGGESTIONS = [
]

def apply_all():
    for s in SUGGESTIONS:
        p = pathlib.Path(s.file)
        try:
            txt = p.read_text(encoding='utf-8')
        except Exception:
            print(f'[WARN] cannot read {p}'); continue
        if s.original and s.original in txt:
            txt = txt.replace(s.original, s.replacement)
        elif s.replacement and s.line > 0:
            # naive insertion before line (1-based)
            parts = txt.splitlines(True)
            idx = max(0, min(len(parts), s.line-1))
            parts.insert(idx, s.replacement + ('\n' if not s.replacement.endswith('\n') else ''))
            txt = ''.join(parts)
        else:
            print(f'[SKIP] {p}:{s.line} has no actionable text')
            continue
        try:
            p.write_text(txt, encoding='utf-8')
            print(f'[OK] patched {p}')
        except Exception as e:
            print(f'[ERR] write failed {p}: {e}')

if __name__ == '__main__':
    apply_all()
