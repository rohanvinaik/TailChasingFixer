# TailChasingFixer Configuration with Improved Analyzers
# This configuration uses the new, more accurate analyzers that reduce false positives

# Use improved analyzers that understand context better
analyzers:
  # Original analyzers (can be disabled if using improved versions)
  import_graph:
    enabled: true
    
  # Duplicate detection - use improved version
  duplicates:
    enabled: false  # Disabled in favor of scope_aware_duplicates
  scope_aware_duplicates:
    enabled: true
    description: "Detects true duplicates while understanding class scope and inheritance"
    
  # Placeholder detection - use improved version  
  placeholders:
    enabled: false  # Disabled in favor of mock_aware_placeholders
  mock_aware_placeholders:
    enabled: true
    description: "Distinguishes between incomplete code and intentional test doubles"
    
  # Symbol detection - use improved version
  missing_symbols:
    enabled: false  # Disabled in favor of runtime_aware_symbols
  runtime_aware_symbols:
    enabled: true
    description: "Understands Python runtime context (__file__, __name__, etc.)"
    
  # LLM detection - use improved version
  llm_detector_improved:
    enabled: true
    description: "Reduces false positives on legitimate sequential patterns"
    
  # Keep other analyzers as-is
  git_chains:
    enabled: true
  circular_imports:
    enabled: true
  semantic_hv:
    enabled: true
    threshold: 0.85  # Higher threshold to reduce false positives
  context_thrashing:
    enabled: true
  import_anxiety:
    enabled: true

# Smart filtering to reduce false positives
smart_filter:
  enable: true
  filter_backup_files: true
  filter_linter_files: true
  filter_generated_code: true
  
  # Additional filters for common patterns
  legitimate_patterns:
    - "__init__.py"  # Init files often have similar imports
    - "test_*.py"    # Test files often have similar setup
    - "*_pb2.py"     # Protocol buffer generated files
    - "mock_*.py"    # Mock implementations
    
# Exclusions for paths that shouldn't be analyzed
paths:
  exclude:
    - __pycache__
    - .git
    - .pytest_cache
    - .mypy_cache
    - build
    - dist
    - "*.egg-info"
    - venv
    - env
    - .venv
    - node_modules
    - .tox
    - htmlcov
    - .coverage
    - "*.pyc"
    - "*.pyo"
    - "*.pyd"
    - ".DS_Store"
    - "Thumbs.db"

# Risk thresholds remain the same
risk_thresholds:
  low: 10
  medium: 25
  high: 50
  critical: 100

# Issue weights - adjusted for improved analyzers
issue_weights:
  # Improved analyzers have higher confidence
  scope_aware_duplicate: 2.0
  mock_aware_placeholders: 1.5
  runtime_aware_symbols: 2.5
  llm_detector_improved: 1.0
  
  # Original weights for other analyzers
  circular_import: 3.0
  semantic_duplicate_function: 2.5
  context_window_thrashing: 2.0
  import_anxiety: 1.5
  git_chain: 1.0

# Reporting configuration
report:
  show_suggestions: true
  max_issues_per_type: 20
  include_evidence: true
  include_confidence: true
  
# Performance settings
performance:
  max_file_size_mb: 10
  max_files: 10000
  parallel_processing: true
  cache_enabled: true