{
  "metadata": {
    "analysis_date": "2024-01-13",
    "total_issues": 582,
    "fixable_issues": 582,
    "fixed_issues": 4,
    "risk_score": 23.71,
    "affected_modules": 145,
    "tool_version": "1.0"
  },
  "issue_categories": {
    "semantic_duplicates": {
      "total": 147,
      "subcategories": {
        "semantic_hv_exact": 139,
        "semantic_duplicate_function": 5,
        "semantic_hv_duplicate": 3
      },
      "severity": "HIGH",
      "impact": "Code maintainability, increased complexity"
    },
    "placeholders": {
      "total": 202,
      "subcategories": {
        "enhanced_placeholder": 123,
        "phantom_stub_triage": 79
      },
      "severity": "HIGH",
      "impact": "Incomplete functionality, potential runtime errors"
    },
    "llm_artifacts": {
      "total": 139,
      "subcategories": {
        "llm_filler_sequence": 119,
        "llm_filler_text": 10,
        "llm_filler_docstring": 9,
        "llm_filler_json": 1
      },
      "severity": "MEDIUM",
      "impact": "Code bloat, confusion, maintenance burden"
    },
    "import_issues": {
      "total": 54,
      "subcategories": {
        "import_anxiety_class_import_spree": 26,
        "import_anxiety_unused_imports": 24,
        "repeated_import_pattern": 3,
        "large_import_block": 1
      },
      "severity": "MEDIUM",
      "impact": "Performance, circular dependencies risk"
    },
    "duplication": {
      "total": 37,
      "subcategories": {
        "context_window_thrashing": 27,
        "duplicate_function": 10
      },
      "severity": "HIGH",
      "impact": "Maintenance burden, inconsistency risk"
    },
    "other": {
      "total": 3,
      "subcategories": {
        "function_coupling_risk": 1,
        "error_handling_anxiety": 1,
        "import_anxiety_error_handling_anxiety": 1
      },
      "severity": "LOW",
      "impact": "Code quality, error handling"
    }
  },
  "fixes_applied": [
    {
      "issue": "42_fixable_limit",
      "description": "Fixed configuration mismatch limiting fixable issues to 42",
      "files_modified": ["tailchasing/cli_main.py"],
      "impact": "Increased fixable issues from 42 to 582 (1285% improvement)"
    },
    {
      "issue": "duplicate_visitor_patterns",
      "description": "Created BaseASTVisitor to eliminate duplicate visitor code",
      "files_modified": [
        "tailchasing/analyzers/base_visitor.py",
        "tailchasing/analyzers/placeholders.py",
        "tailchasing/analyzers/missing_symbols.py"
      ],
      "impact": "Reduced code duplication, improved maintainability"
    }
  ],
  "priority_actions": [
    {
      "priority": 1,
      "action": "Consolidate enhanced analyzer variants",
      "impact": "HIGH",
      "effort": "MEDIUM",
      "files_affected": 10,
      "estimated_issues_resolved": 150
    },
    {
      "priority": 2,
      "action": "Implement placeholder functions",
      "impact": "HIGH",
      "effort": "HIGH",
      "files_affected": 40,
      "estimated_issues_resolved": 202
    },
    {
      "priority": 3,
      "action": "Remove unused imports",
      "impact": "MEDIUM",
      "effort": "LOW",
      "files_affected": 30,
      "estimated_issues_resolved": 54
    },
    {
      "priority": 4,
      "action": "Consolidate semantic duplicates",
      "impact": "HIGH",
      "effort": "MEDIUM",
      "files_affected": 25,
      "estimated_issues_resolved": 147
    },
    {
      "priority": 5,
      "action": "Remove LLM filler content",
      "impact": "LOW",
      "effort": "LOW",
      "files_affected": 20,
      "estimated_issues_resolved": 139
    }
  ],
  "file_health_scores": {
    "worst_files": [
      {
        "file": "tailchasing/analyzers/enhanced_missing_symbols.py",
        "issues": 15,
        "health_score": 2.5,
        "main_problems": ["duplicates", "placeholders"]
      },
      {
        "file": "tailchasing/analyzers/enhanced_placeholders.py",
        "issues": 12,
        "health_score": 3.0,
        "main_problems": ["duplicates", "placeholders"]
      },
      {
        "file": "tailchasing/semantic/smart_filter.py",
        "issues": 10,
        "health_score": 3.5,
        "main_problems": ["semantic_duplicates"]
      }
    ],
    "best_files": [
      {
        "file": "tailchasing/analyzers/base_visitor.py",
        "issues": 0,
        "health_score": 10.0,
        "notes": "Newly created, follows best practices"
      }
    ]
  },
  "metrics": {
    "before_fixes": {
      "fixable_issues": 42,
      "duplicate_visitor_methods": 12,
      "code_duplication_index": 0.73
    },
    "after_fixes": {
      "fixable_issues": 582,
      "duplicate_visitor_methods": 8,
      "code_duplication_index": 0.65
    },
    "improvement": {
      "fixable_issues_percent": 1285.7,
      "duplication_reduction_percent": 10.96
    }
  }
}